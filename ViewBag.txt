......................................TestController.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using FirstTestProject.Models;

namespace FirstTestProject.Controllers
{
    


     
        public class TestController : Controller
        {

          public ActionResult GetView()
          {
            Employee emp = new Employee();
            emp.FirstName = "Sukesh";
            emp.LastName = "Marla";
            emp.Salary = 20000;
            // ViewData["Employee"] = emp;
            // return View("MyView");
            ViewBag.Employee = emp;
            return View("MyView");

        }
        }
    


}


......................................Employee.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace FirstTestProject.Models
{
    public class Employee
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public int Salary { get; set; }
    }
}


......................................MyView.cshtml

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>MyView</title>
</head>
<body>
    <div>
        Welcome to first session of MVC.
        @{

            FirstTestProject.Models.Employee emp = (FirstTestProject.Models.Employee)ViewBag.Employee;
        }
        <br>
        <b>Employee Details </b><br />
        Employee Name : @emp.FirstName @emp.LastName <br />
        Employee Salary: @emp.Salary.ToString("C")
    </div>
</body>
</html>

ViewBag is use to pass data from Controller to View.
It is same as ViewData.
ViewBag internally uses ViewData.
ViewData holds objects internally. Every time a new value is added into it, it get boxed to object type.
So unboxing is required every time we try to extract value out of it.





